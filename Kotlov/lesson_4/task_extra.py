
our_text = input().lower()  # Вводим наш текст и приводим его к одинаковому регистру

for i in [',', '-', '.']:  # Удаляем все не нужные элементы
    our_text = our_text.replace(i, ' ')

our_text = our_text.split()  # Делаем список из элементов(слов) строки our_text

n = int(input("-n "))  # Вводим максимальное кол-во строк вывода

k = int(input('-k '))  # Вводим максимальное кол-во слов в строке для вывода

sort_text = []

[sort_text.append(i) for i in our_text if i not in sort_text]    # В новосозданный список добавляем все уникальные элементы
                                                                 # работает как set(),но сохраняет исходный порядок слов

word_count = {i: our_text.count(i) for i in sort_text}  # Создаём словарь элементами которого являются слова и их количество в тексте


def words_ranker(text: list, count_n=0) -> str:
    """
    Печатает n строк встречающихся слов по порядку убывания кол-ва повторений этого слова в тексте.
    При одинаковом кол-ве вхождений слов, выводим первые k из них.
    """

    list_equal_count, list_equal_count_k = [], []   #  Cоздаём список со словами с одинаковым кол-во повторения
                                                    #  и список со словами с одинаковым кол-во повторения
                                                    #  + количество,которых не превосходит k

    maxi_n = 0  # Кол-во повторений слова в тексте

    if count_n == n:  # Проверка кол-ва выведенных строк с тем которое задали мы в начале(эта проверка стоит в начале,а
                      # не в конце,т.к, если мы введём n = 0,то всё полетит))
        return '______'

    for key in text:  # Находим кол-во, самого часто встречаемого элемента
        if word_count[key] > maxi_n:
            maxi_n = word_count[key]

    for t in text:  # Находим слова,которые встречаюся maxi_n раз + проверяем сколько максимум таких слов может быть в строке
        if word_count[t] == maxi_n:
            list_equal_count.append(t)

            if len(list_equal_count_k) < k:
                list_equal_count_k.append(t)

    print(maxi_n, end=' ')                  # Выводим наши строки, сначала кол-во повторений этих слов в тексте,а потом сами слова
    print(*list_equal_count_k, sep=', ')

    count_n += 1  # Cчитаем кол-во строк (уже выведенных)

    text = list(filter(lambda x: x not in list_equal_count, text))  # Убираем уже использованные элементы

    return None if text == [] else words_ranker(text, count_n)  # Если все слова выведены,то выходим из функции,иначе
                                                                # выполняем words_ranker() заново, до тех пор,
                                                                # пока у нас не останется не выведенных слов


words_ranker(sort_text)
